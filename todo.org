* [x] make morse-station reflect values, especially choices in menus
* [x] achieve menu choices with data binding
* [x] achieve additional actions with property change observers  
* [x] make textareas readonly
* [x] make textareas erasable
* [x] make input erasable
* [x] make input sendable
* [x] make input cancelable
* [x] go back to collapsing settings
* [x] disable iambic tagged input controls when straight key
* [x] move straight key/iambic paddle selector to the top
* [x] alter the app title on page changes
* [x] make icons for the app
* [x] set up vulcanizer for polymer-0.5
* [x] vulcanize app
* [x] test vulcanize --csp for the chrome app
* [x] rename repository to morse-code-polymer-0.5
* [x] move to entirely inline javascript for components
  no need to manage external files when vulcanize and
  crisper will sort those issues out on the backend.
* [x] fix leftover use of selected as integer in morse-app
* [x] use bars for titles
* [x] use icons
** [x] clear for input
** [x] send for input
** [x] clear for textareas
** [x] settings for setting blocks
** [x] refresh for MIDI refresh
** [?] swap-horiz for swap paddles
** [x] info for info pages
* [x] get the keyboard focus reliably onto the input page
* [x] get the keyboard focus onto the whole html document
  got it reliably onto the morse-app element
* [x] extract common morse-key function
* [x] extract common decoded text display
* [x] make all three windows implement the same key/decoded text
* [x] use animations for page reveals
* [ ] use routing to select titles, pages, ...
* [ ] decide whether the polyserver makes sense
  so, building an app uses components in ./bower_components
  but running an app that is loaded from bower uses components
  in ../, polyserver resolves imports and loads
* [ ] follow guide to material design
  tooltip specs http://www.google.com/design/spec/components/tooltips.html#tooltips-tooltips-desktop-
* [ ] stop the output decoder from getting ahead of itself
* [ ] make the input decoder track the input speed, if there is one
* [ ] package as a chrome application and push to the store
* [ ] move to card based drill
** [ ] show didah
** [ ] show text
** [ ] show reply text
** [ ] show score
** [ ] make optional what is shown
** [ ] add replay, skip, and quit buttons to each card
** [ ] review cards at end of session
* [ ] Morse Mimic - teach your muscles
* [ ] make the decoded text consistent across the app windows
* [ ] fix the key clicks 
  I suspect timing jitter induced by a sample clock that only changes
  once per buffer and jumps by a buffer worth of samples. when I pick
  up the buffer time near the start or end of the buffer, I get
  different results for placing activities into the future.
  Test by looking at the distribution of context.currentTime values
  returned.
* [ ] build a monitor page with scope and logic traces
* [ ] CDE mobile push issues
** [ ] confusion when both touch and pointer events are active
** [ ] no text decoding shown
** [ ] try from web deploy?
* [ ] select and implement color choices
* [ ] mobile chrome scales screen to too small
  needs a <meta viewport> found in web starter kit documents
* [-] using <pre> to preserve space eliminates line wrap
  and I still don't get the mobile browser text updated
* [x] Reverted to <textarea and got things working fine.
